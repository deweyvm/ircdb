#!/usr/bin/env python
import subprocess
import sys
import re
import datetime
import time
import cgitb, cgi
import os
import pwd
import pyodbc
from bs4 import BeautifulSoup

cgitb.enable()
print("Content-type: text/html\n")


try:
    arguments = cgi.FieldStorage()
    db = arguments["name"].value
except KeyError:
    db = ""
os.environ['MYSQL_UNIX_PORT'] = '/var/run/mysqld/mysqld.sock'
driver="MySql ODBC 5.1 Driver"

def getFooter(duration):
    t = "Generated by <a href=\"https://github.com/deweyvm/starstats\">starstats</a>"
    return "<div id=\"footer\">%s on %s in %s.</div>" % (t, time.ctime(), duration)

def printNotFound(exc):
    print("<html><head><title>starstats</title><link href=\"/css.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body>")
    print("<div id=\"emptyhead\">No records for channel '%s'</div>" % db)
    print(getFooter(0))


    print("<!-- %s -->" % str(exc))
    print("</body></html>")

try:
    import pyodbc
    cstr="DSN=name32;Driver={%s};Server=localhost;Port=3306;Database=%s;User=root;Password=password;Option=3;" % (driver, db)

    cnxn = pyodbc.connect(cstr)
except Exception as exc:
    printNotFound(exc)
    sys.exit(0)

p = subprocess.Popen(['time ./starstats \"%s\" \"%s\" -g' % (driver, db)],
                     stdout=subprocess.PIPE,
                     stderr=subprocess.PIPE,
                     shell=True)

(out, err) = p.communicate()
timetaken = "???"
if p.returncode != 0:
    printNotFound(err)
    sys.exit(0)
elif err is not None and len(err) > 0:
    lines = err.split("\n")

    for l in lines:
        print("<!-- %s -->" % l)
        if re.search("real\t", l) is not None:
            timetaken=re.sub(".*real\t*(.*)", "\\1", l)





s = getFooter(timetaken)
soup = BeautifulSoup(out)
container = soup.body.find('div', attrs={'id':'container'})
tag = soup.new_tag("div", id="footer")
soup2 = BeautifulSoup(s)
container.insert(len(container.contents), soup2)
pretty = soup.prettify(formatter="html")
#this fixes a bug where links have an underlined space after them
print(re.sub("(\r\n|\n)[ ]*</a", "</a", pretty))
